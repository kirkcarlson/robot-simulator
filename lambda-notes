def two() :
    return 2

def three() :
    return 3

print (two());
george = lambda: two();
print (george ());
george = lambda: three();
print (george());

'''
so the goal is to have lamda functions to read the values of the joystick
buttons or whatever and these functions would be used by control things

want a robot class to be both human controlled and machine controlled
    machine controlled has a set of path vectors (and rotations)

class Robot:
    # general, 1 is max speed, + angles are CW
    __init__():

    def self.rotate( (x)): # rotate the robot in the direction

    def self.rotateVector( (x,y)) # rotate the robot to the vector in place

    def self.moveVector( (x, y)): # move in direction of vector
       rotateVector

something like:
    want to specify range of joystick (r is real, p is positive, b is binary)
        rVector is x (-1..+1), y (-1..+1)
        rScaler is (-1..+1)
        pScaler is (0..+1)
        bScaler is (0,1)
        toTrue is 01 transition event
        toFalse is 10 transition event
        whileTrue is true while true
        whileFalse is true while true
    the control loop goes through a set of commands and executes those
    that are true

need to select both the particular xbox and the particular control
within the xbox
    xboxes are numbered as they are discovered
    controls within an xbox are numbered statically
        joystick 0: right joystick x
                 1: right joystick y
                 2: right trigger
                 3: left joystick x
                 4: left joystick y
                 5: left trigger
        button 0: x, right paddle
               1: y, left paddle
               2:
               3:
               4:
               5:
               6:
               7:
               8:
               9:
              10:
        hat 0: x,y

    robot.movevector( lamda 1: joystick.xy())
    robot.rotateVelocity ( lamda 2: joystick.x())

    switch controlMode:
        case swerve:
            robot.moveVelocity( lamda 1: joystick.xy())
            robot.rotateVector( lamda 1: joystick.xy())
            while cwRotation:
                robot.rotationVelocity ( 1)

            while ccwRotation:
                robot.rotationVelocity ( -1)
            break
        case tankDrive:
            robot.direction ( lamda 1: controller.button())
            robot.rightVelocity( lamda 2: controller.joystick.x())
            robot.leftVelocity( lamda 5: controller.joystick.x())
            break
        case skipDrive:
            robot.rightVelocity( lamda 0: joystick.x())
            robot.leftVelocity( lamda 4: joystick.x())
            break
        default:
            break

'''
